#!/bin/bash
#
# Unified Reflector GUI for Arch Linux with backup and restore options
#

# Constants
MIRRORLIST_PATH="/etc/pacman.d/mirrorlist"
BACKUP_MIRRORLIST_PATH="/etc/pacman.d/mirrorlist.backup"
DEFAULT_MIRRORS=20

# Function to get country code
get_country_code() {
    local country_code

    country_code=$(curl -s --max-time 5 https://ipapi.co/country_code/)
    
    if [ $? -eq 0 ] && [[ $country_code =~ ^[A-Z]{2}$ ]]; then
        echo "$country_code"
        return 0
    fi

    country_code=$(curl -s --max-time 5 http://ip-api.com/line/?fields=countryCode)
    
    if [ $? -eq 0 ] && [[ $country_code =~ ^[A-Z]{2}$ ]]; then
        echo "$country_code"
        return 0
    fi

    echo "Worldwide"
    return 1
}

# Function to run reflector and update system
run_reflector_and_update() {
    local country="$1"
    local sort="$2"
    local number="$3"
    local protocols="$4"

    cmd="reflector --verbose"
    [ -n "$country" ] && [ "$country" != "Worldwide" ] && cmd="$cmd --country $country"
    [ -n "$sort" ] && cmd="$cmd --sort $sort"
    cmd="$cmd --number $number"
    [ -n "$protocols" ] && cmd="$cmd --protocol $protocols"

    output=$(sudo bash -c "$cmd")
    
    if [ $? -ne 0 ] && [[ $output != *"Failed to retrieve mirror status"* ]]; then
        yad --error --text="Reflector failed. Please check your settings and try again."
        return 1
    fi

    # Show the new mirrorlist and ask for confirmation
    if echo "$output" | yad --text-info --title="New Mirrorlist" --width=800 --height=600 \
        --button="Save:0" --button="Cancel:1"; then
        
        # Create backup before applying changes
        sudo cp "$MIRRORLIST_PATH" "$BACKUP_MIRRORLIST_PATH"

        # Save the new mirrorlist
        echo "$output" | sudo tee "$MIRRORLIST_PATH" > /dev/null
        yad --info --text="New mirrorlist saved successfully."

        if yad --question --text="Mirrorlist updated. Do you want to check for system updates?"; then
            updates=$(sudo pacman -Sy && pacman -Qu)
            if [ -n "$updates" ]; then
                if yad --question --text="Updates are available. Do you want to proceed with the update?"; then
                    sudo pacman -Su
                fi
            else
                yad --info --text="System is up to date."
            fi
        fi
    else
        yad --info --text="Changes cancelled. Mirrorlist not updated."
    fi
}

# Function to view current mirrorlist
view_mirrorlist() {
    if [ -f "$MIRRORLIST_PATH" ]; then
        yad --text-info --title="Current Mirrorlist" --filename="$MIRRORLIST_PATH" --width=800 --height=600
    else
        yad --error --text="Mirrorlist not found at $MIRRORLIST_PATH"
    fi
}

# Function to restore backup mirrorlist
restore_backup() {
    if [ -f "$BACKUP_MIRRORLIST_PATH" ]; then
        if yad --question --text="Are you sure you want to restore the backup mirrorlist?"; then
            sudo cp "$BACKUP_MIRRORLIST_PATH" "$MIRRORLIST_PATH"
            yad --info --text="Backup mirrorlist restored."
        fi
    else
        yad --error --text="Backup mirrorlist not found at $BACKUP_MIRRORLIST_PATH"
    fi
}

# Main dialog
main_dialog() {
    local country_code=$(get_country_code)
    local country_message="Detected country: $country_code. You can change it if needed."

    # Dropdown options for locations with the detected country preselected
    local locations="Worldwide!Africa!Asia!Europe!North America!Oceania!South America!$country_code"

    if [ "$country_code" == "Worldwide" ]; then
        country_message="Country detection failed. Please select your region manually."
        locations="Worldwide!Africa!Asia!Europe!North America!Oceania!South America"
    fi

    local result=$(yad --form --title="StormOS Arch Linux Reflector" \
        --text="$country_message\nConfigure Reflector options:" \
        --field="Location:CB" "$locations" \
        --field="Sort by:CB" "age!rate!score!delay!country" \
        --field="Number of mirrors:NUM" "$DEFAULT_MIRRORS" \
        --field="Protocols:CB" "https!http!https,http" \
        --field="Action:CB" "Run Reflector!View Current Mirrorlist!Restore Backup!Exit" \
        --width=400 --height=300)

    IFS='|' read -r country sort number protocols action <<< "$result"
    
    case "$action" in
        "Run Reflector")
            run_reflector_and_update "$country" "$sort" "$number" "$protocols"
            ;;
        "View Current Mirrorlist")
            view_mirrorlist
            ;;
        "Restore Backup")
            restore_backup
            ;;
        "Exit")
            exit 0
            ;;
    esac
}

# Main program loop
while true; do
    main_dialog
done